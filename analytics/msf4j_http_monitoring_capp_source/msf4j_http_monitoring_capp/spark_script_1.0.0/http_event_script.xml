<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<Analytics>
    <Name>http_event_script</Name>
    <Script>

        create temporary table ServiceRequestData USING CarbonAnalytics OPTIONS(tableName
        "ORG_WSO2_MSF4J_ANALYTICS_HTTPMONITORING");

        CREATE TEMPORARY TABLE MSS_REQUESTS_SUMMARY_PER_MINUTE USING CarbonAnalytics OPTIONS (tableName
        "MSS_REQUESTS_SUMMARY_PER_MINUTE",
        schema "service_class string -i,
        server_address string -i,
        avg_request_count int,
        avg_response_time int,
        session_count int,
        http_success_count int,
        http_error_count int,
        time long -i,
        all_facet FACET -i,
        time_facet FACET -i,
        year_facet FACET -i,
        month_facet FACET -i,
        day_facet FACET -i,
        hour_facet FACET -i,
        service_class_facet FACET -i",
        primaryKeys "service_class,server_address,time"
        );

        insert into table MSS_REQUESTS_SUMMARY_PER_MINUTE select service_class,
        meta_server_address as server_address,
        count(request_uri) as avg_request_count,
        avg(response_time) as avg_response_time,
        0 as session_count,
        sum(if(http_status_code&lt;400, 1, 0)) as http_success_count,
        sum(if(http_status_code&gt;=400, 1, 0)) as http_error_count,
        cast(first(meta_timestamp)/1000 as timestamp) as time,
        facet1(1),
        facet1(substring(cast(first(meta_timestamp)/1000 as timestamp),0,16)),
        facet1(substring(cast(first(meta_timestamp)/1000 as timestamp),0,4)),
        facet1(substring(cast(first(meta_timestamp)/1000 as timestamp),0,7)),
        facet1(substring(cast(first(meta_timestamp)/1000 as timestamp),0,10)),
        facet1(substring(cast(first(meta_timestamp)/1000 as timestamp),0,13)),
        facet1(service_class)
	 from ServiceRequestData group by meta_application_type, meta_server_address,
        service_class, substring(cast(meta_timestamp/1000 as timestamp),0,16);

        CREATE TEMPORARY TABLE MSS_NODES USING CarbonAnalytics OPTIONS (tableName "MSS_NODES",
        schema "server_address string -i",
        primaryKeys "server_address"
        );

        insert into table MSS_NODES select meta_server_address as server_address
	 from ServiceRequestData group by meta_server_address;

        CREATE TEMPORARY TABLE MSS_HTTP_STATUS USING CarbonAnalytics OPTIONS (tableName "MSS_HTTP_STATUS",
        schema "service_class string -i,
        server_address string -i,
        avg_request_count int,
        http_status_code int,
        time long -i,
        all_facet FACET -i,
        http_status_facet FACET -i",
        primaryKeys "service_class,server_address,time"
        );

        insert into table MSS_HTTP_STATUS select service_class,
        meta_server_address as server_address,
        count(request_uri) as avg_request_count,
        http_status_code,
        cast(first(meta_timestamp)/1000 as timestamp) as time,
        facet1(1),
        facet1(http_status_code)
	 from ServiceRequestData group by meta_server_address, service_class, http_status_code,
        substring(cast(meta_timestamp/1000 as timestamp),0,16);


        CREATE TEMPORARY TABLE MSS_SERVICE_CONTEXT USING CarbonAnalytics OPTIONS (tableName "MSS_SERVICE_CONTEXT",
        schema "service_class string -i,
        server_address string -i,
        avg_request_count int,
        service_context string,
        time long -i,
        all_facet FACET -i,
        context_facet FACET -i",
        primaryKeys "service_class,server_address,time"
        );

        insert into table MSS_SERVICE_CONTEXT select service_class,
        meta_server_address as server_address,
        count(request_uri) as avg_request_count,
        service_context,
        cast(first(meta_timestamp)/1000 as timestamp) as time,
        facet1(1),
        facet1(service_context)
	 from ServiceRequestData group by meta_server_address, service_class, service_context,
        substring(cast(meta_timestamp/1000 as timestamp),0,16);


    </Script>
    <CronExpression>0 0/15 * 1/1 * ? *</CronExpression>
</Analytics>
